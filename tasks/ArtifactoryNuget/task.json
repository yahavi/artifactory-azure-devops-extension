{
    "id": "07fc5c20-6772-11e5-abde-6901d3d11476",
    "name": "ArtifactoryNuGet",
    "friendlyName": "Artifactory Nuget",
    "description": "Restore and push NuGet packages from and to Artifactory while allowing to collect build-info. The collected build-info can be later published to Artifactory by the \"Artifactory Publish Build Info\" task.",
    "author": "JFrog",
    "helpMarkDown": "[More Information](https://www.jfrog.com/confluence/display/RTF/NuGet+Repositories)",
    "category": "Utility",
    "visibility": [
        "Build",
        "Release"
    ],
    "version": {
        "Major": "1",
        "Minor": "1",
        "Patch": "1"
    },
    "demands": [
    ],
    "minimumAgentVersion": "2.115.0",
    "instanceNameFormat": "Artifactory NuGet $(command)",
    "groups": [
        {
            "name": "advancedRestore",
            "displayName": "Advanced",
            "isExpanded": false,
            "visibleRule": "command = restore"
        }
    ],
    "inputs": [
        {
            "name": "command",
            "type": "pickList",
            "label": "Command",
            "defaultValue": "restore",
            "helpMfarkDown": "The NuGet command to run. Select 'Custom' to add arguments or to use a different command.",
            "required": "true",
            "properties": {
                "EditableOptions": "False"
            },
            "options": {
                "restore": "restore",
                "push": "push"
            }
        },
        {
            "name": "arguments",
            "type": "string",
            "label": "Arguments",
            "defaultValue": "",
            "helpMarkDown": "The arguments which will be passed to NuGet for execution.",
            "required": false,
            "visibleRule": "command = restore"
        },
        {
            "name": "artifactoryService",
            "type": "connectedService:artifactoryService",
            "label": "Artifactory service",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Artifactory service for artifacts deployment."
        },
        {
            "name": "targetResolveRepo",
            "type": "pickList",
            "label": "Resolution repository",
            "defaultValue": "",
            "required": true,
            "visibleRule": "command = restore",
            "helpMarkDown": "Sets the resolution repository.",
            "properties": {
                "EditableOptions": "True"
            }
        },
        {
            "name": "targetDeployRepo",
            "type": "pickList",
            "label": "Deployment repository",
            "defaultValue": "",
            "required": true,
            "visibleRule": "command = push",
            "helpMarkDown": "Sets the deployment repository.",
            "properties": {
                "EditableOptions": "True"
            }
        },
        {
            "name": "solutionPath",
            "type": "filePath",
            "label": "Path to the solution (The root of working directory by default)",
            "defaultValue": "**/*.sln",
            "helpMarkDown": "The path to the solution (*.sln). Accepts Ant-style patterns.",
            "required": "true",
            "visibleRule": "command = restore"
        },
        {
            "name": "pathToNupkg",
            "type": "filePath",
            "label": "Path to NuGet package(s) to publish",
            "defaultValue": "*.nupkg",
            "helpMarkDown": "The path to nupkg file(s) to be uploaded. Accepts wildcards.",
            "required": "true",
            "visibleRule": "command = push"
        },
        {
            "name": "noNuGetCache",
            "type": "boolean",
            "label": "Disable local NuGet cache",
            "defaultValue": "false",
            "helpMarkDown": "Prevents NuGet from using cached packages.",
            "required": "false",
            "groupName": "advancedRestore"
        },
        {
            "name": "packagesDirectory",
            "type": "filePath",
            "label": "Destination directory",
            "helpMarkDown": "Specifies the folder in which packages are installed. If no folder is specified, the current folder is used.",
            "required": "false",
            "groupName": "advancedRestore"
        },
        {
            "name": "verbosityRestore",
            "type": "pickList",
            "label": "Verbosity",
            "defaultValue": "Detailed",
            "helpMarkDown": "Specifies the amount of detail displayed in the output: normal, quiet, detailed.",
            "required": "false",
            "groupName": "advancedRestore",
            "options": {
                "Quiet": "Quiet",
                "Normal": "Normal",
                "Detailed": "Detailed"
            }
        },
        {
            "name": "collectBuildInfo",
            "type": "boolean",
            "label": "Collect build info",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "Select to collect build info."
        },
        {
            "name": "includeEnvVars",
            "type": "boolean",
            "label": "Include environment variables",
            "defaultValue": "false",
            "required": false,
            "visibleRule": "collectBuildInfo == true",
            "helpMarkDown": "Select to include environment variables in the published build info."
        }
    ],
    "dataSourceBindings": [
        {
            "endpointId": "$(artifactoryService)",
            "endpointURL": "{{endpoint.url}}/api/repositories",
            "target": "targetResolveRepo",
            "resultSelector": "jsonpath:$[?(@.type=='VIRTUAL')]",
            "resultTemplate": "{ \"Value\" : \"{{{key}}}\", \"DisplayValue\" : \"{{{key}}}\" }"
        },
        {
            "endpointId": "$(artifactoryService)",
            "endpointURL": "{{endpoint.url}}/api/repositories",
            "target": "targetDeployRepo",
            "resultSelector": "jsonpath:$[?(@.type=='LOCAL' || @.type=='VIRTUAL')]",
            "resultTemplate": "{ \"Value\" : \"{{{key}}}\", \"DisplayValue\" : \"{{{key}}}\" }"
        }
    ],
    "execution": {
        "Node": {
            "target": "nugetBuild.js",
            "workingDirectory": "$(currentDirectory)"
        }
    }
}
